import pytest
from game_manager import GameManager, BOARD_SIZE, PASS_GO_CASH, STARTING_CASH
import random

@pytest.fixture
def gm():
    return GameManager()

def test_create_game_initializes_room(gm):
    game_id = gm.create_game()
    assert isinstance(game_id, str) and len(game_id) == 8
    assert game_id in gm.rooms
    room = gm.rooms[game_id]
    # Now we expect 'players', 'playerOrder', and 'currentIndex'
    assert room["players"] == {}
    assert room["playerOrder"] == []
    assert room["currentIndex"] == 0

def test_roll_and_move_single_player(gm, monkeypatch):
    game_id = gm.create_game()
    player_id = gm.add_player(game_id, "Alice", "SID123")
    # Force dice to be 1
    monkeypatch.setattr(random, "randint", lambda a, b: 1)
    snapshot = gm.roll_and_move(game_id, player_id)
    player_info = snapshot["players"][player_id]
    # Moved from 0 to 2
    assert player_info["position"] == 2
    # Didn't pass GO, so money unchanged
    assert player_info["money"] == STARTING_CASH
    # Only one player, so currentTurn remains that player
    assert snapshot["currentTurn"] == player_id

def test_turn_order_and_passing_go(gm, monkeypatch):
    game_id = gm.create_game()
    p1 = gm.add_player(game_id, "Alice", "SID1")
    p2 = gm.add_player(game_id, "Bob", "SID2")

    snapshot1 = gm._snapshot(gm.rooms[game_id])
    assert snapshot1["currentTurn"] == p1

    # Monkeypatch dice to 1
    monkeypatch.setattr(random, "randint", lambda a, b: 1)
    snapshot2 = gm.roll_and_move(game_id, p1)
    p1_info = snapshot2["players"][p1]
    assert p1_info["position"] == 2
    assert p1_info["money"] == STARTING_CASH
    # Now it's Bob's turn
    assert snapshot2["currentTurn"] == p2

    # Move Bob near GO: position 38
    room = gm.rooms[game_id]
    room["players"][p2]["position"] = BOARD_SIZE - 2  # 38
    # Roll again (1+1) â†’ wraps to 0, collects PASS_GO_CASH
    snapshot3 = gm.roll_and_move(game_id, p2)
    p2_info = snapshot3["players"][p2]
    assert p2_info["position"] == 0
    assert p2_info["money"] == STARTING_CASH + PASS_GO_CASH
